{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  // 属性定义\n  title = 'itihub microservice security';\n  authenticated = false;\n  order = {};\n\n  constructor(private http: HttpClient, private cookieService: CookieService) {\n\n    // this.http.get(\"me\").subscribe(data => {\n    this.http.get(\"api/user/me\").subscribe(data => {\n      if (data){\n        this.authenticated = true;\n      }\n      if (!this.authenticated){\n        window.location.href = 'http://auth.itihub.com:9090/oauth/authorize?' +\n          'client_id=admin&' +\n          'redirect_uri=http://admin.itihub.com:8080/oauth/callback&' +\n          'response_type=code&' +\n          'state=abc';\n      }\n    })\n  }\n\n  // 方法定义\n  logout() {\n    this.cookieService.delete('itihub_access_token', '/', 'itihub.com');\n    this.cookieService.delete('itihub_refresh_token', '/', 'itihub.com');\n    // 本地退出\n    this.http.post('logout', null).subscribe(() => {\n      this.authenticated = false ;\n      // 认证服务器退出\n      window.location.href = 'http://auth.itihub.com:9090/logout?redirect_uri=http://admin.itihub.com:8080';\n    }, () => {\n      alert('logout fail');\n    })\n  }\n\n  getOrder() {\n    this.http.get('api/order/orders/1').subscribe(data => {\n      this.order = data;\n    }, () => {\n      alert('get order fail')\n    })\n  }\n}\n","<div [hidden]=\"!authenticated\" style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!\n  </h1>\n  <button (click)=\"getOrder()\" type=\"button\" class=\"btn btn-primary\">Get Order Info</button>\n  <p>order id : {{ order.id }}</p>\n  <p>order product id : {{ order.productId }}</p>\n  <button (click)=\"logout()\" type=\"button\" class=\"btn btn-primary\">Logout</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from \"@angular/forms\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport {RefreshInterceptor} from \"./app.interceptor\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    CookieService,\n    { provide: HTTP_INTERCEPTORS, useClass: RefreshInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\n} from \"@angular/common/http\";\nimport { tap} from \"rxjs/operators\";\nimport { Observable} from \"rxjs\";\nimport { HttpClient} from \"@angular/common/http\";\n\n/**\n * 自定义刷新token失败拦截器\n */\n@Injectable()\nexport class RefreshInterceptor implements HttpInterceptor {\n\n  constructor(private http: HttpClient) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap(\n        () => {},\n        error => {\n          console.log(error)\n          if (error.status === 500 && error.error.messages === 'refresh fail') {\n            // refresh_token 过期处理方式： 退出登录\n            // this.logout();\n\n            // refresh_token 过期处理方式： 自动重新认证\n            window.location.href = 'http://auth.itihub.com:9090/oauth/authorize?' +\n              'client_id=admin&' +\n              'redirect_uri=http://admin.itihub.com:8080/oauth/callback&' +\n              'response_type=code&' +\n              'state=abc';\n          }\n        }\n      )\n    );\n  }\n\n  logout() {\n    this.http.get('logout', {}).subscribe(() => {\n      window.location.href = 'http://auth.itihub.com:9090/logout?redirect_uri=http://admin.itihub.com:8080'\n    });\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}