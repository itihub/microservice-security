{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  // 属性定义\n  title = 'itihub microservice security';\n  authenticated = false;\n  credentials = {username:'itihub', password:'123456'};\n  order = {id:null, productId:null};\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  // 方法定义\n  login() {\n    this.http.post('login', this.credentials).subscribe(() => {\n      this.authenticated = true;\n\n    }, () => {\n      alert('login fail');\n    })\n  }\n\n  logout() {\n    this.http.get('logout').subscribe(() => {\n      this.authenticated = false ;\n    }, () => {\n      alert('logout fail');\n    })\n  }\n\n  getOrder() {\n    this.http.get('api/order/orders/1').subscribe(data => {\n      this.order = data;\n    }, () => {\n      alert('get order fail')\n    })\n  }\n}\n","<div [hidden]=\"!authenticated\" style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!\n  </h1>\n  <button (click)=\"getOrder()\" type=\"button\" class=\"btn btn-primary\">Get Order Info</button>\n  <p>order id : {{ order.id }}</p>\n  <p>order product id : {{ order.productId }}</p>\n  <button (click)=\"logout()\" type=\"button\" class=\"btn btn-primary\">Logout</button>\n</div>\n\n\n\n\n\n  <div class=\"row\">\n    <div class=\"col-lg-4\"></div>\n    <div class=\"col-lg-4\">\n      <div [hidden]=\"authenticated\">\n        <p>please login</p>\n        <form role=\"form\" (submit)=\"login()\">\n\n          <div class=\"form-group\">\n            <label for=\"username\">Username:</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"credentials.username\" />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"credentials.password\" />\n          </div>\n\n          <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n\n        </form>\n      </div>\n    </div>\n    <div class=\"col-lg-4\"></div>\n  </div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}